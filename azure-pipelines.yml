# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: ubuntu-latest

# variables to be used and the group name of the variables
variables:
  - group: aws-docs-deploy

steps:

- task: NodeTool@0
  inputs:
    versionSpec: '23.x'
  displayName: 'Install Node.js'

- task: Bash@3
  displayName: 'Install AWS CLI'
  inputs:
    # specifies that the script is written directly within the YAML file
    targetType: 'inline'
    script: |
      sudo apt-get update
      sudo apt-get -y install awscli

- task: DownloadSecureFile@1
  displayName: 'Download PEM file to temp directory of agent'
  inputs:
    secureFile: 'docs_deploy.pem'  
    targetPath: '$(Agent.TempDirectory)'

- script: |
    ls -laR
  displayName: 'List files'

- script: |
    aws configure set aws_access_key_id $(AWS_ACCESS_KEY_ID)
    aws configure set aws_secret_access_key $(AWS_SECRET_ACCESS_KEY)
    aws configure set region $(AWS_REGION)
  displayName: 'Configure AWS Credentials'

# Get the IP of the current agent and set it as variable.
- task: PowerShell@2
  displayName: Get the IP of current agent
  inputs:
    targetType: 'inline'
    script: |
      $IP= Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
      $IP
      Write-Host "##vso[task.setvariable variable=IP]$IP"

- script: |
    npm install
    npm run build
  displayName: 'npm install and build'

- script: |
    aws ec2 authorize-security-group-ingress --group-id $(AWS_SG_NAME) --protocol tcp --port 22 --cidr $(IP)/32
  displayName: 'Add agent IP to AWS Security Group'

- script: |
    rsync -chav --delete \
          -e 'ssh -i .$(Agent.TempDirectory)/docs_deploy.pem -o StrictHostKeyChecking=no' \
           ./build/ docs_deploy@openlm.com:/var/www/www/openlm.com/documentation/
  displayName: 'Rsync new build'

- script: |
    aws ec2 revoke-security-group-ingress --group-id $(AWS_SG_NAME) --protocol tcp --port 22 --cidr $(IP)/32
  displayName: 'Delete agent IP from AWS Security Group'

- script: |
    ls build/
  displayName: 'List folder contents'

