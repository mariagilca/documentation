"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3686],{6729:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"understanding-openlm/glossary","title":"Glossary","description":"This glossary defines key terms, acronyms, and phrases used throughout OpenLM documentation.","source":"@site/docs/onpremise/understanding-openlm/glossary.md","sourceDirName":"understanding-openlm","slug":"/understanding-openlm/glossary","permalink":"/documentation/onpremise/understanding-openlm/glossary","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedAt":1746532659000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"On-premise deployment requirements","permalink":"/documentation/onpremise/understanding-openlm/system-requirements"},"next":{"title":"List of services","permalink":"/documentation/onpremise/understanding-openlm/list-of-services"}}');var r=s(4848),i=s(8453);const d={sidebar_position:4},a="Glossary",o={},c=[];function l(e){const n={h1:"h1",header:"header",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"glossary",children:"Glossary"})}),"\n",(0,r.jsx)(n.p,{children:"This glossary defines key terms, acronyms, and phrases used throughout OpenLM documentation."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Term"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.strong,{children:"Definition"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Agent"}),(0,r.jsx)(n.td,{children:"A compact software program installed on end-user workstations to gather software license usage data and transmit it to the OpenLM Server."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Alerts"}),(0,r.jsx)(n.td,{children:"OpenLM Alerts allow license managers to define conditions and receive notifications when these conditions are met, ensuring license system stability."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Annapurna"}),(0,r.jsx)(n.td,{children:"The central platform for license management and monitoring within the OpenLM suite, built on microservices and enhanced with AI for performance and scalability."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"API"}),(0,r.jsx)(n.td,{children:"Application Programming Interface."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Broker"}),(0,r.jsx)(n.td,{children:"An intermediary software component that facilitates communication between OpenLM and license managers, converting license usage data into a standardized format."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Component (OpenLM)"}),(0,r.jsx)(n.td,{children:"A software module deployed separately from the core OpenLM Platform to extend functionality. Examples include the OpenLM License Server Broker, Workstation Agent, and Directory Sync Agent."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Concurrent usage"}),(0,r.jsx)(n.td,{children:"The number of licenses in use at any given moment."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Denied usage"}),(0,r.jsx)(n.td,{children:"Instances where license access is blocked because all available licenses are in use."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Feature"}),(0,r.jsx)(n.td,{children:"A specific functionality, module, or component of a licensed software application tracked by OpenLM."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Historical reports"}),(0,r.jsx)(n.td,{children:"Reports that analyze license usage over a past period, useful for identifying trends and forecasting demand."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Idle time"}),(0,r.jsx)(n.td,{children:"The time a license is checked out but not actively used."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"License file"}),(0,r.jsx)(n.td,{children:"A digital document with licensing information such as license count, activated features, expiration date, and usage restrictions."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"License manager"}),(0,r.jsx)(n.td,{children:"Software that controls license distribution and usage, ensuring limits aren\u2019t exceeded. Examples: FlexNet, IBM LUM, Sentinel RMS."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"License server"}),(0,r.jsx)(n.td,{children:"A server that hosts the license manager software and handles license distribution and authentication across a network."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"License utilization"}),(0,r.jsx)(n.td,{children:"A metric showing how many of the available licenses are in use over time, helping assess software usage efficiency."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Microservice"}),(0,r.jsx)(n.td,{children:"An independent software service performing a specific task, often forming part of a larger microservices-based architecture."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"On-premises"}),(0,r.jsx)(n.td,{children:"Refers to OpenLM software hosted on the organization's own infrastructure, either physical or private cloud."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"OpenLM Platform"}),(0,r.jsx)(n.td,{children:"The core system encompassing OpenLM\u2019s services and products for Engineering Licensing, SAM, and SaaS Management."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"OpenLM token (OpenLM)"}),(0,r.jsx)(n.td,{children:"A flexible unit of license entitlement used to access OpenLM features."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Options file"}),(0,r.jsx)(n.td,{children:"A FlexNet configuration file used to control license access policies, such as user or group restrictions and borrowing settings."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Perpetual licensing"}),(0,r.jsx)(n.td,{children:"A model where software is licensed for indefinite use, typically with an upfront fee and annual maintenance. Available for on-premises deployments only."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Product (OpenLM)"}),(0,r.jsx)(n.td,{children:"A distinct OpenLM offering, either core or optional, which might consume system resources when activated. Examples: Dongle Monitoring, Software License Management."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Project"}),(0,r.jsx)(n.td,{children:"A categorization method in OpenLM for organizing license usage data by teams, departments, or projects for tracking and reporting."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Real-time reports"}),(0,r.jsx)(n.td,{children:"Reports that provide up-to-date views of current license usage, availability, and denials."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Role"}),(0,r.jsx)(n.td,{children:"Defines the permissions and access levels assigned to users within the OpenLM system."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Session"}),(0,r.jsx)(n.td,{children:"A user\u2019s active instance of software use, tracked by OpenLM with details such as start/end time, application, and workstation."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"User"}),(0,r.jsx)(n.td,{children:"An individual using licensed applications tracked by OpenLM. Attributes such as name, team, and workstations are recorded."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Usage monitoring"}),(0,r.jsx)(n.td,{children:"The process of tracking and recording software usage to analyze and optimize license consumption."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Workstation"}),(0,r.jsx)(n.td,{children:"The computer or device from which a user accesses licensed software, tracked by OpenLM to map license usage across the organization."})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>a});var t=s(6540);const r={},i=t.createContext(r);function d(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);